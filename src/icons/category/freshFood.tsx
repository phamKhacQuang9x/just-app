import { InnerProps } from 'icons/types';
import * as React from 'react';
import { SvgXml } from 'react-native-svg';

const xmlFreshFood = `
<svg width="32" height="32" viewBox="0 0 32 32" fill="none" xmlns="http://www.w3.org/2000/svg">
<g clip-path="url(#clip0)">
<path d="M31.3704 24.9182H31.2463C31.8125 23.825 31.3362 22.9253 30.5281 22.6992L29.853 22.5105C29.9097 21.9299 29.7366 21.3281 29.3223 20.856C29.3113 20.834 26.3411 17.8784 27.7292 13.6025C27.7388 13.5276 28.1643 12.6685 27.6233 11.6868L28.1687 11.2466C29.583 10.1052 27.7429 7.82495 25.7039 8.5249C25.0708 8.74219 24.6965 9.40039 24.8333 10.0557L24.9656 10.6882C23.8135 11.1079 23.5979 12.207 23.5713 12.2527C23.3625 12.8958 23.2107 13.5554 23.1165 14.2251C21.6606 12.7905 20.7068 12.7798 19.0591 9.14795C18.801 8.57886 18.3022 8.17969 17.7307 8.02124L16.8967 5.66626C17.7747 5.09937 18.0881 3.97022 17.6318 3.0293C16.9636 1.65112 15.0278 1.45386 14.1094 2.72632C14.0679 2.78394 14.002 2.80713 13.9333 2.78858C12.4182 2.37744 11.0388 3.75 11.3865 5.24072C11.623 6.25513 12.5732 6.93921 13.6172 6.82764L14.4509 9.18262C14.1064 9.66528 13.97 10.2893 14.1274 10.894C14.325 11.6533 14.5481 12.6414 14.6101 13.4226C11.1035 10.2847 5.10815 12.1174 4.94629 16.4058C4.89917 17.6567 4.66016 18.1313 4.46802 18.3093C4.26074 18.501 3.92358 18.498 3.39038 18.4771C2.68311 18.449 1.80249 18.4146 1.07886 19.1504C-0.829102 21.0911 0.571045 23.5461 2.99023 24.918C2.14185 24.918 1.46216 24.918 0.629639 24.918C0.281982 24.918 0 25.2 0 25.5476C0 25.8953 0.281982 26.1772 0.629639 26.1772H1.36743V27.7859C1.36743 29.0635 2.40674 30.103 3.68457 30.103H28.3154C29.593 30.103 30.6326 29.0635 30.6326 27.7859V26.1772H31.3704C31.718 26.1772 32 25.8953 32 25.5476C32 25.2 31.718 24.9182 31.3704 24.9182ZM26.1125 9.71607C26.5972 9.54981 27.1243 9.73779 27.3938 10.1736C27.4556 10.2732 27.2974 10.303 26.7163 10.8005C26.6157 10.7485 26.4829 10.6943 26.3855 10.6626H26.3853C26.3789 10.6609 26.3123 10.6389 26.2375 10.6204C26.1021 9.86011 26.0042 9.75342 26.1125 9.71607ZM24.8293 12.4556C25.0334 11.8267 25.821 11.604 26.323 12.0466C26.8696 12.5298 26.5349 13.1619 26.5317 13.2136C25.6003 16.082 26.2573 19.2722 28.2466 21.5393L28.3755 21.6863C28.783 22.1506 28.6311 22.8882 28.0522 23.1455C27.6921 23.3037 27.2554 23.2195 26.9824 22.9084C26.8723 22.7737 26.4233 22.3252 25.856 21.4192C26.071 20.2571 25.9612 19.0396 25.5669 17.9343C25.2722 17.1021 24.7998 16.2727 24.2651 15.5488C24.3179 13.8145 24.7979 12.5791 24.8293 12.4556ZM27.8955 24.9182H23.8682C24.4958 24.3926 25.0085 23.7219 25.3735 22.936C26.0649 23.8516 26.6555 24.5442 27.8062 24.4783L27.8955 24.9182ZM16.9153 9.24927C17.3022 9.11255 17.7422 9.29297 17.9124 9.66821C18.7817 11.5845 19.6687 13.0825 21.3569 14.3613C21.988 14.8394 22.5859 15.4297 23.1326 16.1384C27.1777 21.3894 22.6172 26.6118 18.3489 24.4028C17.3115 23.8662 16.4763 22.9692 15.9717 21.8577C17.2617 19.6126 17.1096 17.0647 15.8599 14.9517C15.9954 13.3977 15.7441 12.1069 15.3459 10.5771C15.2693 10.2825 15.374 9.97583 15.5928 9.78076C15.7869 9.60889 15.9753 9.5835 16.9153 9.24927ZM16.8252 24.9182H12.7803C13.6997 24.4072 14.5054 23.7578 15.1523 23.0073C15.5886 23.7544 16.1562 24.4033 16.8252 24.9182ZM13.6641 5.53418C13.4729 5.60742 13.2212 5.59741 13.01 5.48193C12.8071 5.37085 12.666 5.18384 12.6128 4.95484C12.4775 4.37525 13.0171 3.84546 13.6033 4.00391C14.1809 4.16065 14.7803 3.94849 15.1304 3.46338C15.4844 2.97266 16.238 3.04126 16.4988 3.57886C16.697 3.98779 16.5361 4.50318 16.0461 4.69092C15.6328 4.83692 15.4263 5.2854 15.5679 5.68579L16.4189 8.08936C16.1021 8.20142 15.8298 8.2981 15.5132 8.41016L14.6621 6.00635C14.5205 5.6062 14.0776 5.38745 13.6641 5.53418ZM1.97681 20.0334C2.698 19.2998 4.22485 20.2505 5.32349 19.2334C5.87231 18.7253 6.15234 17.8418 6.20459 16.4531C6.27832 14.4998 8.00903 13.3896 9.69165 13.1563C14.4534 12.4956 17.2207 18.0186 14.554 21.7356C13.0913 23.7742 10.437 24.9182 7.81421 24.9182C3.84204 24.9182 0.0727539 21.97 1.97681 20.0334ZM29.3733 27.7859C29.3733 28.3694 28.8987 28.844 28.3154 28.844H3.68457C3.10107 28.844 2.62646 28.3694 2.62646 27.7859V26.1772H20.3413C20.3625 26.1775 20.3838 26.1782 20.405 26.1782C20.4207 26.1782 20.436 26.1775 20.4517 26.1772H29.3733V27.7859ZM29.2441 24.918C29.1289 24.9263 29.1768 24.783 29.0015 24.0378C29.1411 23.9314 29.2734 23.8005 29.3701 23.6831C30.1216 23.9172 30.2568 23.8782 30.2402 23.9912C30.1648 24.498 29.7551 24.8792 29.2441 24.918Z" fill="url(#paint0_linear)"/>
<path d="M21.3161 17.8079C21.3334 17.8235 23.0329 19.3848 21.935 21.5847C21.7797 21.8958 21.906 22.2739 22.2172 22.4292C22.5283 22.5845 22.9064 22.458 23.0617 22.147C23.8557 20.5559 23.5693 19.2044 23.1894 18.3508C22.7831 17.4387 22.1821 16.8933 22.1567 16.8706C21.8979 16.6384 21.5 16.6599 21.2678 16.919C21.0356 17.1777 21.0571 17.5759 21.3161 17.8079Z" fill="url(#paint1_linear)"/>
<path d="M21.2625 24.0339C21.5857 24.0339 21.8609 23.7863 21.8892 23.4584V23.4565C21.9192 23.1103 21.6624 22.8061 21.316 22.7761C20.9698 22.7473 20.6646 23.0039 20.6346 23.3503C20.6031 23.7175 20.8924 24.0339 21.2625 24.0339Z" fill="url(#paint2_linear)"/>
<path d="M9.91 23.7407C9.91366 23.7402 9.91757 23.7395 9.92123 23.739C11.6974 23.4441 13.276 22.3984 14.1436 20.9421C15.6881 18.3494 14.4574 15.324 12.3477 14.3001C9.9288 13.1257 7.03475 14.6204 7.11532 17.385C7.13973 18.2212 6.79037 18.9094 6.07675 19.4304C4.28451 20.7397 5.03939 23.8198 8.86117 23.8198C9.1976 23.8198 9.54891 23.7942 9.91 23.7407ZM6.42465 21.3315C6.37167 21.0027 6.52304 20.6641 6.81942 20.4473C8.15072 19.4751 8.39974 18.2253 8.37411 17.3484C8.29769 14.7388 12.2789 14.124 13.3934 17.3604C13.7284 18.333 13.6107 19.3762 13.0616 20.2976C12.3822 21.4382 11.1334 22.2595 9.7203 22.4959C8.01693 22.7461 6.56991 22.2351 6.42465 21.3315Z" fill="url(#paint3_linear)"/>
<path d="M10.7495 19.5012C11.6973 19.4929 12.4578 18.7195 12.4497 17.7717C12.4368 16.2537 10.5821 15.4956 9.51199 16.584C8.43777 17.6765 9.24124 19.5195 10.7495 19.5012ZM10.7351 17.3306C10.9849 17.3306 11.1885 17.5317 11.1907 17.7825C11.1939 18.1895 10.7024 18.3933 10.4153 18.1113C10.126 17.8269 10.3284 17.3306 10.7351 17.3306Z" fill="url(#paint4_linear)"/>
</g>
<defs>
<linearGradient id="paint0_linear" x1="2.10732" y1="3.45852" x2="27.9437" y2="35.8826" gradientUnits="userSpaceOnUse">
<stop stop-color="#18C22A"/>
<stop offset="0.479167" stop-color="#13A786"/>
<stop offset="1" stop-color="#0E8AE9"/>
</linearGradient>
<linearGradient id="paint1_linear" x1="21.2689" y1="17.0342" x2="25.4566" y2="19.0061" gradientUnits="userSpaceOnUse">
<stop stop-color="#18C22A"/>
<stop offset="0.479167" stop-color="#13A786"/>
<stop offset="1" stop-color="#0E8AE9"/>
</linearGradient>
<linearGradient id="paint2_linear" x1="20.7151" y1="22.8445" x2="21.8922" y2="24.147" gradientUnits="userSpaceOnUse">
<stop stop-color="#18C22A"/>
<stop offset="0.479167" stop-color="#13A786"/>
<stop offset="1" stop-color="#0E8AE9"/>
</linearGradient>
<linearGradient id="paint3_linear" x1="5.79016" y1="14.4529" x2="15.0805" y2="24.4894" gradientUnits="userSpaceOnUse">
<stop stop-color="#18C22A"/>
<stop offset="0.479167" stop-color="#13A786"/>
<stop offset="1" stop-color="#0E8AE9"/>
</linearGradient>
<linearGradient id="paint4_linear" x1="9.24503" y1="16.2631" x2="12.4498" y2="19.8109" gradientUnits="userSpaceOnUse">
<stop stop-color="#18C22A"/>
<stop offset="0.479167" stop-color="#13A786"/>
<stop offset="1" stop-color="#0E8AE9"/>
</linearGradient>
<clipPath id="clip0">
<rect width="32" height="32" fill="white"/>
</clipPath>
</defs>
</svg>


`;

export const freshFood = ({ width, height }: InnerProps) => (
  <SvgXml xml={xmlFreshFood} width={width} height={height} />
);
